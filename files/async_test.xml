<Entity tags="hello" serialize="0"> <!-- needs serialize="0" so it doesn't get saved on save&quit because the corridor script respawns and spawns it anyway -->

<!-- 

The master entity solely controls the sub entities lifetime, when they spawn and when they die.
To make that work, the spawned entities need serialize="0", so they don't get saved & respawn when restarting the game.
Because the master entity will also respawn and in doing so will respawn all sub entities anyway.

When the master entity goes off screen, kill all it's sub entities.
To check when it goes offscreen, it needs a CameraBoundComponent, with freeze_on_distance_kill="1" (so it respawns when going back on screen)
and execute_on_removed="1" on the LuaComponent that spawns the sub entities. When spawning sub entities, we save their entity_ids, so
we just have to check if they already exist when the script runs, if yes, then that means on_removed runs, so EntityKill() all the sub entities
via their saved entity_ids.

When the master entity respawns in any way, just respawn all sub entities from it's code.

The sub entity also needs execute_on_removed="1", so it can stop it's coroutine when it gets killed,
because coroutines continue running even if the entity it was started on gets killed.
The coroutine will run as long as at least one entity of it's type exists.

 -->






  <SpriteComponent
    image_file="mods/AdventureMode/files/spike_ceiling.png"
    update_transform_rotation="1"
    offset_x="4"
  ></SpriteComponent>

<!-- Needs execute_on_removed="1" so we can stop the coroutine when this entity gets killed -->
  <LuaComponent
    script_source_file="mods/AdventureMode/files/async_test.lua"
    execute_every_n_frame="-1"
    execute_on_added="1"
    execute_on_removed="1"
    enable_coroutines="1"
  ></LuaComponent>
  <!-- execute_on_removed="1" is so we can detect when the entity gets frozen on distance kill,
       so we cann kill the remaining coroutine -->
    <!-- execute_every_n_frame="60" -->
    <!-- vm_type="ONE_PER_COMPONENT_INSTANCE" -->
  <!-- <CameraBoundComponent
    freeze_on_max_count_kill="0"
    freeze_on_distance_kill="1"
  ></CameraBoundComponent> -->
  <!-- 
    with CameraBoundComponent:
    freeze_on_distance_kill="1" = entity gets killed(frozen), and then respawned
    freeze_on_distance_kill="0" = entity gets killed, but not respawned
    Changes made to the Entity via lua at runtime get discarded, as if the entity was EntityLoaded fresh

    without:
    Entity despawns unpredictably, once the game decides it has left the "active zone", but does not lose it's changes
    made during runtime
   -->

</Entity>
